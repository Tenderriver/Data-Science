{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ec6f65fb-7d31-458f-af30-8f5348a01c5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "from urllib.request import urlopen\n",
    "from bs4 import BeautifulSoup\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "36a5815a-0811-45b1-8c6a-e3ce871cee79",
   "metadata": {},
   "outputs": [],
   "source": [
    "url=\"https://urldefense.com/v3/__https://www.hubertiming.com/results/2018MLK*5C__;JQ!!AoaiBx6H!g8CkbIhEeD4R68FQQ7aXYIL5AKFRxIbw27PG8mmnkH_I2GOIKpjenoDGiUw7zjkv$ "     #openlink\n",
    "html=urlopen(url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "22a7f808-5375-4b2d-9dda-0bf3298a710b",
   "metadata": {},
   "outputs": [],
   "source": [
    "soup = BeautifulSoup(html)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7ba43185-8f57-4c26-9fc4-2e84d19fb3d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<title>Race results for the 2018 MLK Dream Run!</title>\n",
      "Race results for the 2018 MLK Dream Run!\n"
     ]
    }
   ],
   "source": [
    "title = soup.title\n",
    "print(title)\n",
    "print(title.text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9783a3f3-7456-41dc-9589-b246727881d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://urldefense.com/v3/__https://www.mlkdreamrun.com/*5Cn__;JQ!!AoaiBx6H!g8CkbIhEeD4R68FQQ7aXYIL5AKFRxIbw27PG8mmnkH_I2GOIKpjenoDGieni_aYJ$ ",
      "mailto:timing@hubertiming.com\n",
      "https://urldefense.com/v3/__https://www.hubertiming.com/*5Cn__;JQ!!AoaiBx6H!g8CkbIhEeD4R68FQQ7aXYIL5AKFRxIbw27PG8mmnkH_I2GOIKpjenoDGid_VMvhY$ ",
      "/results/2018MLK10K#individual\n",
      "/results/2018MLK15K#individual\n",
      "/results/summary/2018MLK\n",
      "#tabs-1\n",
      "https://urldefense.com/v3/__https://www.hubertiming.com/*5Cn__;JQ!!AoaiBx6H!g8CkbIhEeD4R68FQQ7aXYIL5AKFRxIbw27PG8mmnkH_I2GOIKpjenoDGid_VMvhY$ ",
      "https://urldefense.com/v3/__https://facebook.com/hubertiming/*5Cn__;JQ!!AoaiBx6H!g8CkbIhEeD4R68FQQ7aXYIL5AKFRxIbw27PG8mmnkH_I2GOIKpjenoDGiVn9Osog$ "
     ]
    }
   ],
   "source": [
    "links = soup.find_all('a', href=True)\n",
    "for link in links:\n",
    "    print(link.get(\"href\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f55d2d6b-4a54-4a23-8a94-6efc56ab247d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['1', '1191', '\\r\\n\\r\\n                    MAX RANDOLPH\\r\\n\\r\\n                ', 'M', '29', 'WASHINGTON', 'DC', '16:48', '5:25', '\\r\\n\\r\\n                    1 of 78\\r\\n\\r\\n                ', 'M 21-39', '\\r\\n\\r\\n                    1 of 33\\r\\n\\r\\n                ', '0:08', '16:56'], ['2', '1080', '\\r\\n\\r\\n                    NEED NAME KAISER RUNNER\\r\\n\\r\\n                ', 'M', '25', 'PORTLAND', 'OR', '17:31', '5:39', '\\r\\n\\r\\n                    2 of 78\\r\\n\\r\\n                ', 'M 21-39', '\\r\\n\\r\\n                    2 of 33\\r\\n\\r\\n                ', '0:09', '17:40'], ['3', '1275', '\\r\\n\\r\\n                    DAN FRANEK\\r\\n\\r\\n                ', 'M', '52', 'PORTLAND', 'OR', '18:15', '5:53', '\\r\\n\\r\\n                    3 of 78\\r\\n\\r\\n                ', 'M 40-54', '\\r\\n\\r\\n                    1 of 27\\r\\n\\r\\n                ', '0:07', '18:22'], ['4', '1223', '\\r\\n\\r\\n                    PAUL TAYLOR\\r\\n\\r\\n                ', 'M', '54', 'PORTLAND', 'OR', '18:31', '5:58', '\\r\\n\\r\\n                    4 of 78\\r\\n\\r\\n                ', 'M 40-54', '\\r\\n\\r\\n                    2 of 27\\r\\n\\r\\n                ', '0:07', '18:38'], ['5', '1245', '\\r\\n\\r\\n                    THEO KINMAN\\r\\n\\r\\n                ', 'M', '22', '', '', '19:31', '6:17', '\\r\\n\\r\\n                    5 of 78\\r\\n\\r\\n                ', 'M 21-39', '\\r\\n\\r\\n                    3 of 33\\r\\n\\r\\n                ', '0:09', '19:40']]\n"
     ]
    }
   ],
   "source": [
    "data = []\n",
    "allrows = soup.find_all(\"tr\")\n",
    "for row in allrows:\n",
    "    row_list = row.find_all(\"td\")\n",
    "    dataRow = []\n",
    "    for cell in row_list:\n",
    "        dataRow.append(cell.text)\n",
    "    data.append(dataRow)\n",
    "data  = data[5:]\n",
    "print(data[0:5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "283fdada-7e9c-4759-98c5-1448ff1c69fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1191</td>\n",
       "      <td>\\r\\n\\r\\n                    MAX RANDOLPH\\r\\n\\r...</td>\n",
       "      <td>M</td>\n",
       "      <td>29</td>\n",
       "      <td>WASHINGTON</td>\n",
       "      <td>DC</td>\n",
       "      <td>16:48</td>\n",
       "      <td>5:25</td>\n",
       "      <td>\\r\\n\\r\\n                    1 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>\\r\\n\\r\\n                    1 of 33\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:08</td>\n",
       "      <td>16:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1080</td>\n",
       "      <td>\\r\\n\\r\\n                    NEED NAME KAISER R...</td>\n",
       "      <td>M</td>\n",
       "      <td>25</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>17:31</td>\n",
       "      <td>5:39</td>\n",
       "      <td>\\r\\n\\r\\n                    2 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>\\r\\n\\r\\n                    2 of 33\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:09</td>\n",
       "      <td>17:40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1275</td>\n",
       "      <td>\\r\\n\\r\\n                    DAN FRANEK\\r\\n\\r\\n...</td>\n",
       "      <td>M</td>\n",
       "      <td>52</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>18:15</td>\n",
       "      <td>5:53</td>\n",
       "      <td>\\r\\n\\r\\n                    3 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 40-54</td>\n",
       "      <td>\\r\\n\\r\\n                    1 of 27\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:07</td>\n",
       "      <td>18:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1223</td>\n",
       "      <td>\\r\\n\\r\\n                    PAUL TAYLOR\\r\\n\\r\\...</td>\n",
       "      <td>M</td>\n",
       "      <td>54</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>18:31</td>\n",
       "      <td>5:58</td>\n",
       "      <td>\\r\\n\\r\\n                    4 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 40-54</td>\n",
       "      <td>\\r\\n\\r\\n                    2 of 27\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:07</td>\n",
       "      <td>18:38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1245</td>\n",
       "      <td>\\r\\n\\r\\n                    THEO KINMAN\\r\\n\\r\\...</td>\n",
       "      <td>M</td>\n",
       "      <td>22</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>19:31</td>\n",
       "      <td>6:17</td>\n",
       "      <td>\\r\\n\\r\\n                    5 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>\\r\\n\\r\\n                    3 of 33\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:09</td>\n",
       "      <td>19:40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  0     1                                                  2  3   4   \\\n",
       "0  1  1191  \\r\\n\\r\\n                    MAX RANDOLPH\\r\\n\\r...  M  29   \n",
       "1  2  1080  \\r\\n\\r\\n                    NEED NAME KAISER R...  M  25   \n",
       "2  3  1275  \\r\\n\\r\\n                    DAN FRANEK\\r\\n\\r\\n...  M  52   \n",
       "3  4  1223  \\r\\n\\r\\n                    PAUL TAYLOR\\r\\n\\r\\...  M  54   \n",
       "4  5  1245  \\r\\n\\r\\n                    THEO KINMAN\\r\\n\\r\\...  M  22   \n",
       "\n",
       "           5   6      7     8   \\\n",
       "0  WASHINGTON  DC  16:48  5:25   \n",
       "1    PORTLAND  OR  17:31  5:39   \n",
       "2    PORTLAND  OR  18:15  5:53   \n",
       "3    PORTLAND  OR  18:31  5:58   \n",
       "4                  19:31  6:17   \n",
       "\n",
       "                                                  9        10  \\\n",
       "0  \\r\\n\\r\\n                    1 of 78\\r\\n\\r\\n   ...  M 21-39   \n",
       "1  \\r\\n\\r\\n                    2 of 78\\r\\n\\r\\n   ...  M 21-39   \n",
       "2  \\r\\n\\r\\n                    3 of 78\\r\\n\\r\\n   ...  M 40-54   \n",
       "3  \\r\\n\\r\\n                    4 of 78\\r\\n\\r\\n   ...  M 40-54   \n",
       "4  \\r\\n\\r\\n                    5 of 78\\r\\n\\r\\n   ...  M 21-39   \n",
       "\n",
       "                                                  11    12     13  \n",
       "0  \\r\\n\\r\\n                    1 of 33\\r\\n\\r\\n   ...  0:08  16:56  \n",
       "1  \\r\\n\\r\\n                    2 of 33\\r\\n\\r\\n   ...  0:09  17:40  \n",
       "2  \\r\\n\\r\\n                    1 of 27\\r\\n\\r\\n   ...  0:07  18:22  \n",
       "3  \\r\\n\\r\\n                    2 of 27\\r\\n\\r\\n   ...  0:07  18:38  \n",
       "4  \\r\\n\\r\\n                    3 of 33\\r\\n\\r\\n   ...  0:09  19:40  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame(data)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "803a8ae2-8e49-432c-a534-227177f61b60",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Place', 'Bib', 'Name', 'Gender', 'Age', 'City', 'State', 'Chip Time', 'Chip Pace', 'Gender Place', 'Age Group', 'Age Group Place', 'Time to Start', 'Gun Time']\n"
     ]
    }
   ],
   "source": [
    "header_list = []\n",
    "col_headers = soup.find_all('th')\n",
    "for col in col_headers:\n",
    "    header_list.append(col.text)\n",
    "print(header_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e4002037-4cd3-4b75-a811-62f647a4b542",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Place</th>\n",
       "      <th>Bib</th>\n",
       "      <th>Name</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Chip Time</th>\n",
       "      <th>Chip Pace</th>\n",
       "      <th>Gender Place</th>\n",
       "      <th>Age Group</th>\n",
       "      <th>Age Group Place</th>\n",
       "      <th>Time to Start</th>\n",
       "      <th>Gun Time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1191</td>\n",
       "      <td>\\r\\n\\r\\n                    MAX RANDOLPH\\r\\n\\r...</td>\n",
       "      <td>M</td>\n",
       "      <td>29</td>\n",
       "      <td>WASHINGTON</td>\n",
       "      <td>DC</td>\n",
       "      <td>16:48</td>\n",
       "      <td>5:25</td>\n",
       "      <td>\\r\\n\\r\\n                    1 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>\\r\\n\\r\\n                    1 of 33\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:08</td>\n",
       "      <td>16:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1080</td>\n",
       "      <td>\\r\\n\\r\\n                    NEED NAME KAISER R...</td>\n",
       "      <td>M</td>\n",
       "      <td>25</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>17:31</td>\n",
       "      <td>5:39</td>\n",
       "      <td>\\r\\n\\r\\n                    2 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>\\r\\n\\r\\n                    2 of 33\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:09</td>\n",
       "      <td>17:40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1275</td>\n",
       "      <td>\\r\\n\\r\\n                    DAN FRANEK\\r\\n\\r\\n...</td>\n",
       "      <td>M</td>\n",
       "      <td>52</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>18:15</td>\n",
       "      <td>5:53</td>\n",
       "      <td>\\r\\n\\r\\n                    3 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 40-54</td>\n",
       "      <td>\\r\\n\\r\\n                    1 of 27\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:07</td>\n",
       "      <td>18:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1223</td>\n",
       "      <td>\\r\\n\\r\\n                    PAUL TAYLOR\\r\\n\\r\\...</td>\n",
       "      <td>M</td>\n",
       "      <td>54</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>18:31</td>\n",
       "      <td>5:58</td>\n",
       "      <td>\\r\\n\\r\\n                    4 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 40-54</td>\n",
       "      <td>\\r\\n\\r\\n                    2 of 27\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:07</td>\n",
       "      <td>18:38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1245</td>\n",
       "      <td>\\r\\n\\r\\n                    THEO KINMAN\\r\\n\\r\\...</td>\n",
       "      <td>M</td>\n",
       "      <td>22</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>19:31</td>\n",
       "      <td>6:17</td>\n",
       "      <td>\\r\\n\\r\\n                    5 of 78\\r\\n\\r\\n   ...</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>\\r\\n\\r\\n                    3 of 33\\r\\n\\r\\n   ...</td>\n",
       "      <td>0:09</td>\n",
       "      <td>19:40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Place   Bib                                               Name Gender Age  \\\n",
       "0     1  1191  \\r\\n\\r\\n                    MAX RANDOLPH\\r\\n\\r...      M  29   \n",
       "1     2  1080  \\r\\n\\r\\n                    NEED NAME KAISER R...      M  25   \n",
       "2     3  1275  \\r\\n\\r\\n                    DAN FRANEK\\r\\n\\r\\n...      M  52   \n",
       "3     4  1223  \\r\\n\\r\\n                    PAUL TAYLOR\\r\\n\\r\\...      M  54   \n",
       "4     5  1245  \\r\\n\\r\\n                    THEO KINMAN\\r\\n\\r\\...      M  22   \n",
       "\n",
       "         City State Chip Time Chip Pace  \\\n",
       "0  WASHINGTON    DC     16:48      5:25   \n",
       "1    PORTLAND    OR     17:31      5:39   \n",
       "2    PORTLAND    OR     18:15      5:53   \n",
       "3    PORTLAND    OR     18:31      5:58   \n",
       "4                       19:31      6:17   \n",
       "\n",
       "                                        Gender Place Age Group  \\\n",
       "0  \\r\\n\\r\\n                    1 of 78\\r\\n\\r\\n   ...   M 21-39   \n",
       "1  \\r\\n\\r\\n                    2 of 78\\r\\n\\r\\n   ...   M 21-39   \n",
       "2  \\r\\n\\r\\n                    3 of 78\\r\\n\\r\\n   ...   M 40-54   \n",
       "3  \\r\\n\\r\\n                    4 of 78\\r\\n\\r\\n   ...   M 40-54   \n",
       "4  \\r\\n\\r\\n                    5 of 78\\r\\n\\r\\n   ...   M 21-39   \n",
       "\n",
       "                                     Age Group Place Time to Start Gun Time  \n",
       "0  \\r\\n\\r\\n                    1 of 33\\r\\n\\r\\n   ...          0:08    16:56  \n",
       "1  \\r\\n\\r\\n                    2 of 33\\r\\n\\r\\n   ...          0:09    17:40  \n",
       "2  \\r\\n\\r\\n                    1 of 27\\r\\n\\r\\n   ...          0:07    18:22  \n",
       "3  \\r\\n\\r\\n                    2 of 27\\r\\n\\r\\n   ...          0:07    18:38  \n",
       "4  \\r\\n\\r\\n                    3 of 33\\r\\n\\r\\n   ...          0:09    19:40  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns = header_list\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ec44059b-183f-4c0b-af75-578ef589353a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Name'] = df['Name'].str.replace('\\r\\n\\r\\n','')\n",
    "df['Gender Place'] = df['Gender Place'].str.replace('\\r\\n\\r\\n','')\n",
    "df['Age Group Place'] = df['Age Group Place'].str.replace('\\r\\n\\r\\n','')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4d4d8253-dc51-4d39-8556-9bdba6ffa18a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Place</th>\n",
       "      <th>Bib</th>\n",
       "      <th>Name</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Chip Time</th>\n",
       "      <th>Chip Pace</th>\n",
       "      <th>Gender Place</th>\n",
       "      <th>Age Group</th>\n",
       "      <th>Age Group Place</th>\n",
       "      <th>Time to Start</th>\n",
       "      <th>Gun Time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1191</td>\n",
       "      <td>MAX RANDOLPH</td>\n",
       "      <td>M</td>\n",
       "      <td>29</td>\n",
       "      <td>WASHINGTON</td>\n",
       "      <td>DC</td>\n",
       "      <td>16:48</td>\n",
       "      <td>5:25</td>\n",
       "      <td>1 of 78</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>1 of 33</td>\n",
       "      <td>0:08</td>\n",
       "      <td>16:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1080</td>\n",
       "      <td>NEED NAME KAISER RUNNER   ...</td>\n",
       "      <td>M</td>\n",
       "      <td>25</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>17:31</td>\n",
       "      <td>5:39</td>\n",
       "      <td>2 of 78</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>2 of 33</td>\n",
       "      <td>0:09</td>\n",
       "      <td>17:40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1275</td>\n",
       "      <td>DAN FRANEK</td>\n",
       "      <td>M</td>\n",
       "      <td>52</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>18:15</td>\n",
       "      <td>5:53</td>\n",
       "      <td>3 of 78</td>\n",
       "      <td>M 40-54</td>\n",
       "      <td>1 of 27</td>\n",
       "      <td>0:07</td>\n",
       "      <td>18:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1223</td>\n",
       "      <td>PAUL TAYLOR</td>\n",
       "      <td>M</td>\n",
       "      <td>54</td>\n",
       "      <td>PORTLAND</td>\n",
       "      <td>OR</td>\n",
       "      <td>18:31</td>\n",
       "      <td>5:58</td>\n",
       "      <td>4 of 78</td>\n",
       "      <td>M 40-54</td>\n",
       "      <td>2 of 27</td>\n",
       "      <td>0:07</td>\n",
       "      <td>18:38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1245</td>\n",
       "      <td>THEO KINMAN</td>\n",
       "      <td>M</td>\n",
       "      <td>22</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>19:31</td>\n",
       "      <td>6:17</td>\n",
       "      <td>5 of 78</td>\n",
       "      <td>M 21-39</td>\n",
       "      <td>3 of 33</td>\n",
       "      <td>0:09</td>\n",
       "      <td>19:40</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Place   Bib                                               Name Gender Age  \\\n",
       "0     1  1191                       MAX RANDOLPH                      M  29   \n",
       "1     2  1080                      NEED NAME KAISER RUNNER   ...      M  25   \n",
       "2     3  1275                         DAN FRANEK                      M  52   \n",
       "3     4  1223                        PAUL TAYLOR                      M  54   \n",
       "4     5  1245                        THEO KINMAN                      M  22   \n",
       "\n",
       "         City State Chip Time Chip Pace  \\\n",
       "0  WASHINGTON    DC     16:48      5:25   \n",
       "1    PORTLAND    OR     17:31      5:39   \n",
       "2    PORTLAND    OR     18:15      5:53   \n",
       "3    PORTLAND    OR     18:31      5:58   \n",
       "4                       19:31      6:17   \n",
       "\n",
       "                                  Gender Place Age Group  \\\n",
       "0                      1 of 78                   M 21-39   \n",
       "1                      2 of 78                   M 21-39   \n",
       "2                      3 of 78                   M 40-54   \n",
       "3                      4 of 78                   M 40-54   \n",
       "4                      5 of 78                   M 21-39   \n",
       "\n",
       "                               Age Group Place Time to Start Gun Time  \n",
       "0                      1 of 33                          0:08    16:56  \n",
       "1                      2 of 33                          0:09    17:40  \n",
       "2                      1 of 27                          0:07    18:22  \n",
       "3                      2 of 27                          0:07    18:38  \n",
       "4                      3 of 33                          0:09    19:40  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8656a99d-898b-42d1-9e1d-571ca6c0a937",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 191 entries, 0 to 190\n",
      "Data columns (total 14 columns):\n",
      " #   Column           Non-Null Count  Dtype \n",
      "---  ------           --------------  ----- \n",
      " 0   Place            191 non-null    object\n",
      " 1   Bib              191 non-null    object\n",
      " 2   Name             191 non-null    object\n",
      " 3   Gender           191 non-null    object\n",
      " 4   Age              191 non-null    object\n",
      " 5   City             191 non-null    object\n",
      " 6   State            191 non-null    object\n",
      " 7   Chip Time        191 non-null    object\n",
      " 8   Chip Pace        191 non-null    object\n",
      " 9   Gender Place     191 non-null    object\n",
      " 10  Age Group        191 non-null    object\n",
      " 11  Age Group Place  191 non-null    object\n",
      " 12  Time to Start    191 non-null    object\n",
      " 13  Gun Time         191 non-null    object\n",
      "dtypes: object(14)\n",
      "memory usage: 21.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e6d6ab1b-261e-4c32-8653-1ad50e48aad8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(191, 14)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e7db9616-fd07-43b1-9320-65c85b10cec8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(191, 14)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2 = df.dropna(axis=0, how='any')\n",
    "df2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ad6c8917-9528-43d9-b374-12c29072973d",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "to assemble mappings requires at least that [year, month, day] be specified: [day,month,year] is missing",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-17-822cbc06d5cf>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdf2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Correct'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_datetime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Chip Time'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'%H:%M:%S'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'coerce'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdf2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCorrect\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_datetime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCorrect\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misnull\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'%H:%M:%S'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'coerce'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/opt/anaconda3/lib/python3.8/site-packages/pandas/core/tools/datetimes.py\u001b[0m in \u001b[0;36mto_datetime\u001b[0;34m(arg, errors, dayfirst, yearfirst, utc, format, exact, unit, infer_datetime_format, origin, cache)\u001b[0m\n\u001b[1;32m    806\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    807\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mABCDataFrame\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mabc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMutableMapping\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 808\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_assemble_from_unit_mappings\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtz\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    809\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mIndex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    810\u001b[0m         \u001b[0mcache_array\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_maybe_cache\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcache\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconvert_listlike\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/anaconda3/lib/python3.8/site-packages/pandas/core/tools/datetimes.py\u001b[0m in \u001b[0;36m_assemble_from_unit_mappings\u001b[0;34m(arg, errors, tz)\u001b[0m\n\u001b[1;32m    905\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    906\u001b[0m         \u001b[0m_required\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\",\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 907\u001b[0;31m         raise ValueError(\n\u001b[0m\u001b[1;32m    908\u001b[0m             \u001b[0;34m\"to assemble mappings requires at least that \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    909\u001b[0m             \u001b[0;34mf\"[year, month, day] be specified: [{_required}] is missing\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: to assemble mappings requires at least that [year, month, day] be specified: [day,month,year] is missing"
     ]
    }
   ],
   "source": [
    "df2['Correct'] = pd.to_datetime(df2['Chip Time'], format='%H:%M:%S', errors='coerce')\n",
    "df2.Correct.update(pd.to_datetime(df2[df2.Correct.isnull()], format='%H:%M:%S', errors='coerce'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a48a7f6e-48ba-407d-8c41-80cb62abd823",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
